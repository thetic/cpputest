name: Extended builds

on:
  push:
  pull_request:

jobs:
  test_report:
    runs-on: ubuntu-latest
    steps:
      - name: Install tools
        run: sudo apt-get install -y ant-optional
      - name: Checkout
        uses: actions/checkout@main
      - run: |
          autoreconf -i .
          ./configure
          make check
          ./CppUTestTests -ojunit
          ./CppUTestExtTests -ojunit
          cp ./scripts/generate_junit_report_ant.xml .
          ant -f generate_junit_report_ant.xml

  cmake_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install tools
        run: pip install --user cpp-coveralls gcovr
      - name: Checkout
        uses: actions/checkout@main
      - run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DC++11=ON -DCOVERAGE=ON -DLONGLONG=ON
          cmake --build build
          ctest --test-dir build
          coveralls -b build -r . -i "src" -i "include" --gcov-options="-lbc" || true

  cmake_dos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Install tools
        run: |
          git clone https://github.com/cpputest/watcom-compiler.git watcom
          echo "WATCOM=$GITHUB_WORKSPACE/watcom" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/watcom/binl" >> $GITHUB_PATH
      - name: Configure
        run: >
          cmake
          -B cpputest_build
          -S .
          -D CMAKE_BUILD_TYPE=MinSizeRel
          -D CMAKE_SYSTEM_NAME=DOS
          -D CMAKE_SYSTEM_PROCESSOR=I86
          -D CMAKE_CROSSCOMPILING_EMULATOR=$PWD/platforms/Dos/dosbox.sh
        env:
          CC: wcl
          CXX: wcl
          CFLAGS: -ml -zm
          CXXFLAGS: -ml -zm -xds
          TERM: linux
      - name: Build
        run: cmake --build cpputest_build --verbose
